<?xml version="1.0" encoding="UTF-8"?>

<!-- 
	이 파일은 데이터베이스 SQL구문을 보관해두는 파일이다.
	이를 mapper(매퍼) 파일이라고 부른다.
	
	mapper 파일은 테이블당 1개씩 만드는 것을 원칙으로 하며, 여러 개 있을 수 있다.
	mapper 파일간 충돌을 방지하기 위해 별칭(namespace)을 부여하도록 강제한다.  
-->

<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
 
<mapper namespace="notice">

	<!-- 
		insert를 수행할 수 있는 구문
		- id : 외부에서 구문을 호출하기 위한 이름(식별자)
		- parameterType : 외부에서 전달되는 데이터의 자료형
		
		myBatis에서는 데이터를 배치하기 위해 다음과 같은 형태의 식을 제공
		1. #{이름} : 전달된 데이터에서 해당하는 이름의 값을 자료형에 알맞게 동적으로 배치
		2. ${이름} : 전달된 데이터에서 해당하는 이름의 값을 어떠한 처리도 없이 정적으로 배치
	 -->
	 <!-- 공지사항(NOTICE) 글 작성 -->
	<insert id="notice_write" parameterType="Notice">
		insert into notice(notice_no, notice_title, notice_content, notice_category)
			values(NOTICE_SEQ.nextval, #{notice_title}, #{notice_content}, #{notice_category})
	</insert>
	
	<!-- 공지사항 목록을 위한 조회 --><!-- 카테고리 넣을거면 넣기 -->
	<select id="notice_list" resultType="Notice">
		select notice_no, notice_title, notice_date, notice_category from notice order by notice_no DESC
	</select>
	
	<!-- 시퀀스 -->
	<select id="notice_seq" resultType="int">
		select notice_seq.nextval from dual
	</select>
	
	<!-- 공지사항 상세보기 -->
	<select id="notice_detail" resultType="Notice" parameterType="int">
		select * from notice where notice_no = #{notice_no}
	</select>
		
	<!-- 공지사항 수정 -->
	<update id="notice_edit" parameterType="Notice">
		update notice set
			 notice_title = #{notice_title}, 
			 notice_content = #{notice_content},
			 notice_category = #{notice_category}
		 where notice_no = #{notice_no}
	</update>
	
	<!-- 공지사항 삭제 -->
	<delete id="notice_delete" parameterType="int">
		delete from notice where notice_no = #{notice_no}
	</delete>
	
	<!-- 페이징처리 -->
	<select id="listPage" resultType="Notice" parameterType="Criteria">
		select notice_no, notice_title, notice_content, notice_date, notice_category from (
		select notice_no, notice_title, notice_content, notice_date, notice_category, row_number() over(order by notice_no DESC)
		as RNUM from notice) MP
		where RNUM between #{rowStart} and #{rowEnd} order by notice_no DESC
	</select>

	<!-- 공지사항 총 개수 -->
	<select id="cntNotice" resultType="int">
		<![CDATA[
		select count(notice_no) from notice where notice_no > 0
		]]>
	</select>
</mapper>
