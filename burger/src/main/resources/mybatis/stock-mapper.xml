<?xml version="1.0" encoding="UTF-8"?>

<!-- 
	이 파일은 데이터베이스 SQL구문을 보관해두는 파일이다.
	이를 mapper(매퍼) 파일이라고 부른다.
	
	mapper 파일은 테이블당 1개씩 만드는 것을 원칙으로 하며, 여러 개 있을 수 있다.
	mapper 파일간 충돌을 방지하기 위해 별칭(namespace)을 부여하도록 강제한다.  
-->

<!DOCTYPE mapper
 PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
 "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
 
<mapper namespace="stock">

	<!-- 
		insert를 수행할 수 있는 구문
		- id : 외부에서 구문을 호출하기 위한 이름(식별자)
		- parameterType : 외부에서 전달되는 데이터의 자료형
		
		myBatis에서는 데이터를 배치하기 위해 다음과 같은 형태의 식을 제공
		1. #{이름} : 전달된 데이터에서 해당하는 이름의 값을 자료형에 알맞게 동적으로 배치
		2. ${이름} : 전달된 데이터에서 해당하는 이름의 값을 어떠한 처리도 없이 정적으로 배치
	 -->
	<select id ="item_check" parameterType="Map" resultType="Stock">
		select item_no from stock where item_no = #{item_no} and branch_no = #{branch_no}
	</select>
	
	<select id="date_check" parameterType="int" resultType="Stock">
		select * from stock where to_char(stock_date) = to_char(sysdate) and branch_no = #{branch_no}
	</select>
	
	<select id="category_list" parameterType="map" resultType="StockItemVo">
		select rn, S.branch_no, S.item_no, I.category, I.item_name, I.item_price, S.stock_count, S.stock_date from (
			select rownum rn, TMP.* from(
				select * from stock where item_no = #{item_no} and branch_no = #{branch_no} order by stock_date desc) TMP
			) S left outer join item I on S.item_no = I.item_no where I.category = #{category} and rn=1
	</select>
	
	<select id="all_list" resultType="StockItemVo">
		select rn, S.branch_no, S.item_no, I.category, I.item_name, I.item_price, S.stock_count, S.stock_date from (
			select rownum rn, TMP.* from(
				select * from stock where item_no = #{item_no} and branch_no = #{branch_no} order by stock_date desc) TMP
			) S left outer join item I on S.item_no = I.item_no where rn=1 
	</select>
	
	<select id="getSeq" resultType="int">
		select stock_seq.nextval from dual
	</select>
	
	<insert id="register" parameterType="map">
		insert into stock values(
			#{stock_no}, #{branch_no}, #{item_no}, #{stock_count}, sysdate
		)
	</insert>
	
	<insert id="plus" parameterType="map">
		insert into stock values(
			#{stock_no}, #{branch_no}, #{item_no}, 0, sysdate-1
		)
	</insert>
	
	<select id="chart_date" parameterType="int" resultType="String">
		select to_char(sysdate-#{day}, 'YYYY-MM-DD') from dual
	</select>
	
	<select id="chart_stock" parameterType="map" resultType="Stock">
		select * from stock 
			where to_char(stock_date) = to_char(sysdate-#{day}) 
				and item_no = #{item_no} 
				and branch_no = #{branch_no}
	</select>
	
	<select id="week_stock" parameterType="map" resultType="StockItemVo">
		select S.branch_no, S.item_no, S.stock_count, S.stock_date, I.item_name, I.category from stock S 
			left outer join item I on S.item_no = I.item_no 
				where to_char(S.stock_date) = to_char(sysdate-#{day}) and S.item_no = #{item_no} and S.branch_no = #{branch_no}
	</select>
</mapper>
